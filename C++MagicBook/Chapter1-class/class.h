//class.h
#ifndef _____CLASS_H_____
#define _____CLASS_H_____

//下記がクラスの書き方
class POS
{
private://外部に公開しない
	//メンバ変数
	int x;
	int y;
protected://外部には公開しないが、このクラスから派生したクラスには公開する
	//今回はprotectedに書くものはない

public://外部に公開する

	//コンストラクタ
	//オブジェクト生成時に自動的に呼び出される関数
	//コンストラクタとして定義するメンバ関数名はクラス名と同じにする
	POS();

	//引数があるコンストラクタ
	//メンバ変数の初期化値をこちらで指定できる
	POS(int x, int y);

	//デストラクタ
	//オブジェクトを解体時(returnやdestroy)に自動的に呼び出される
	//基本的には中身は空(メモリ確保などをしている場合にはここで開放処理をする)
	~POS();

	//メンバ関数の宣言
	//最後のconstは、メンバ変数の変更を行わないことを意味する
	//メンバ変数に変更を加えない関数には全てconstを付けるといいだろう
	int GetPosX() const;
	int GetPosY() const;

	//変数に変更を加える関数にconstは付けてはいけない
	//(constが付いていた場合、定義内でメンバ変数の変更をしようとするとビルドエラーになる)
	void SetPos(int x, int y);
};

//続いて継承について解説する
//継承とは、あるクラスの機能を受け継いで新しいクラスを作り出すものだ
//下記が継承の例である

class Base
{
public:
	Base();//基底クラスのコンストラクタ
	~Base();//基底クラスのデストラクタ

	void Hello();//基底クラスの関数
};

//継承の書き方
//"class クラス名 : アクセス指定子(基本的にはpublic) 基底クラス名" この書き方が基本となる
class Child : public Base
{
public:
	Child();//派生クラスのコンストラクタ
	~Child();//派生クラスのデストラクタ
	//機能の追加
	void HelloWorld();
};

//派生クラスのインスタンスを生成する祭、基底クラスの引数があるコンストラクタを呼び出してメンバを初期化する、
//委譲コンストラクタというものもあるが、これ以上知識を詰め込み過ぎると頭がパンクするので、一旦以上とする
//継承というものはかなりややこしいので、授業を受ける前の段階では、上記で説明したことを理解できていれば大丈夫だと思われる
//2行上で言った、委譲コンストラクタなどは、また授業で習うと思うので、その時に新しい章として詳しい説明を追加しようと思う

#endif //!_____CLASS_H_____